name: Lint & Test
on:
  push:
    paths:
      - 'go.mod'
      - '**.go'
      - '.github/workflows/lint.yml'
  pull_request:
    paths:
        - 'go.mod'
        - '**.go'
        - '.github/workflows/lint.yml'

jobs:
  golangci-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: "--config .golintci.yml"

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Check out code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-  

      - name: Check and get dependencies
        run: |
          go mod tidy
          git diff --exit-code go.mod
          # git diff --exit-code go.sum
          go mod download
          go mod vendor
          # git diff --exit-code ./vendor/

      - name: Test
        run: go test -v -coverprofile="c.out" -race ./...

      - name: Report to Deepsource
        if: ${{ runner.os == 'Linux' && env.DEEPSOURCE_DSN != null }}
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key go --value-file ./c.out
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}


  test-yaegi:
    name: test-yaegi
    runs-on: ubuntu-latest
    env:
      YAEGI_VERSION: v0.14.3
      CGO_ENABLED: 0
    defaults:
        run:
            working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: go/src/github.com/${{ github.repository }}
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Yaegi ${{ env.YAEGI_VERSION }}
        run: curl -sfL https://raw.githubusercontent.com/traefik/yaegi/master/install.sh | bash -s -- -b $(go env GOPATH)/bin ${YAEGI_VERSION}

      - name: Setup GOPATH
        run: go env -w GOPATH=${{ github.workspace }}/go

      - name: Test with Yaegi
        run: yaegi test -v .